const e=JSON.parse('{"key":"v-9de97638","path":"/system-design/9_api_design.html","title":"10. API 设计","lang":"zh-CN","frontmatter":{"description":"10. API 设计 API（应用程序接口）是现代软件系统中不同模块之间通信的桥梁。一个设计良好的 API 能显著提高系统的扩展性、可维护性和安全性。本文将讨论 API 设计的关键原则，并结合 Twitter 核心 API 的实例，介绍最佳实践。","head":[["meta",{"property":"og:url","content":"https://CCCdk.github.io/system-design/9_api_design.html"}],["meta",{"property":"og:site_name","content":"DK 酱"}],["meta",{"property":"og:title","content":"10. API 设计"}],["meta",{"property":"og:description","content":"10. API 设计 API（应用程序接口）是现代软件系统中不同模块之间通信的桥梁。一个设计良好的 API 能显著提高系统的扩展性、可维护性和安全性。本文将讨论 API 设计的关键原则，并结合 Twitter 核心 API 的实例，介绍最佳实践。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-21T14:03:27.000Z"}],["meta",{"property":"article:author","content":"DK 酱"}],["meta",{"property":"article:modified_time","content":"2025-03-21T14:03:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. API 设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-21T14:03:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DK 酱\\",\\"url\\":\\"https://github.com/CCCdk\\"}]}"]]},"headers":[{"level":2,"title":"使用 HTTPS 确保通信安全","slug":"使用-https-确保通信安全","link":"#使用-https-确保通信安全","children":[]},{"level":2,"title":"域名规范化","slug":"域名规范化","link":"#域名规范化","children":[]},{"level":2,"title":"版本控制（Versioning）","slug":"版本控制-versioning","link":"#版本控制-versioning","children":[]},{"level":2,"title":"RESTful 路径设计","slug":"restful-路径设计","link":"#restful-路径设计","children":[]},{"level":2,"title":"使用 HTTP 动词定义操作","slug":"使用-http-动词定义操作","link":"#使用-http-动词定义操作","children":[]},{"level":2,"title":"过滤与分页（Filtering & Pagination）","slug":"过滤与分页-filtering-pagination","link":"#过滤与分页-filtering-pagination","children":[]},{"level":2,"title":"状态码与错误处理（Status Codes & Error Handling）","slug":"状态码与错误处理-status-codes-error-handling","link":"#状态码与错误处理-status-codes-error-handling","children":[]},{"level":2,"title":"返回结果的结构化","slug":"返回结果的结构化","link":"#返回结果的结构化","children":[]},{"level":2,"title":"身份认证与授权","slug":"身份认证与授权","link":"#身份认证与授权","children":[]},{"level":2,"title":"限流与请求优化","slug":"限流与请求优化","link":"#限流与请求优化","children":[]},{"level":2,"title":"文档化与开发者支持","slug":"文档化与开发者支持","link":"#文档化与开发者支持","children":[]},{"level":2,"title":"扩展支持：HATEOAS","slug":"扩展支持-hateoas","link":"#扩展支持-hateoas","children":[]}],"git":{"createdTime":1742565807000,"updatedTime":1742565807000,"contributors":[{"name":"CCCdk","email":"chendongkai@cn.net.ntes","commits":1}]},"readingTime":{"minutes":3.95,"words":1186},"filePathRelative":"system-design/9_api_design.md","localizedDate":"2025年3月21日","excerpt":"<h1> 10. API 设计</h1>\\n<p>API（应用程序接口）是现代软件系统中不同模块之间通信的桥梁。一个设计良好的 API 能显著提高系统的扩展性、可维护性和安全性。本文将讨论 API 设计的关键原则，并结合 <strong>Twitter 核心 API</strong> 的实例，介绍最佳实践。</p>","autoDesc":true}');export{e as data};
