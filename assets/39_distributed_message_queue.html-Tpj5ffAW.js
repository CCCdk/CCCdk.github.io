const e=JSON.parse('{"key":"v-74dca369","path":"/system-design/39_distributed_message_queue.html","title":"19. 设计分布式消息队列","lang":"zh-CN","frontmatter":{"description":"19. 设计分布式消息队列 在本章中，我们将设计一个分布式消息队列。 消息队列的优势： 解耦 - 消除组件之间的紧耦合，使它们能够独立更新。 提高可扩展性 - 生产者和消费者可以根据流量独立扩展。 增加可用性 - 如果系统的一部分出现故障，其他部分仍然可以与队列交互。 更好的性能 - 生产者可以在不等待消费者确认的情况下生成消息。","head":[["meta",{"property":"og:url","content":"https://CCCdk.github.io/system-design/39_distributed_message_queue.html"}],["meta",{"property":"og:site_name","content":"DK 酱"}],["meta",{"property":"og:title","content":"19. 设计分布式消息队列"}],["meta",{"property":"og:description","content":"19. 设计分布式消息队列 在本章中，我们将设计一个分布式消息队列。 消息队列的优势： 解耦 - 消除组件之间的紧耦合，使它们能够独立更新。 提高可扩展性 - 生产者和消费者可以根据流量独立扩展。 增加可用性 - 如果系统的一部分出现故障，其他部分仍然可以与队列交互。 更好的性能 - 生产者可以在不等待消费者确认的情况下生成消息。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-21T14:03:27.000Z"}],["meta",{"property":"article:author","content":"DK 酱"}],["meta",{"property":"article:modified_time","content":"2025-03-21T14:03:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"19. 设计分布式消息队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-21T14:03:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DK 酱\\",\\"url\\":\\"https://github.com/CCCdk\\"}]}"]]},"headers":[{"level":2,"title":"第一步：理解问题并确定设计范围","slug":"第一步-理解问题并确定设计范围","link":"#第一步-理解问题并确定设计范围","children":[{"level":3,"title":"功能需求：","slug":"功能需求","link":"#功能需求","children":[]},{"level":3,"title":"非功能性需求：","slug":"非功能性需求","link":"#非功能性需求","children":[]}]},{"level":2,"title":"第二步：提出高层次设计并获得认可","slug":"第二步-提出高层次设计并获得认可","link":"#第二步-提出高层次设计并获得认可","children":[{"level":3,"title":"消息模型","slug":"消息模型","link":"#消息模型","children":[]},{"level":3,"title":"主题、分区和代理","slug":"主题、分区和代理","link":"#主题、分区和代理","children":[]},{"level":3,"title":"消费者组","slug":"消费者组","link":"#消费者组","children":[]},{"level":3,"title":"高层次架构","slug":"高层次架构","link":"#高层次架构","children":[]}]},{"level":2,"title":"第三步：设计深入分析","slug":"第三步-设计深入分析","link":"#第三步-设计深入分析","children":[{"level":3,"title":"数据存储","slug":"数据存储","link":"#数据存储","children":[]},{"level":3,"title":"消息数据结构","slug":"消息数据结构","link":"#消息数据结构","children":[]},{"level":3,"title":"批量处理","slug":"批量处理","link":"#批量处理","children":[]},{"level":3,"title":"生产者流程","slug":"生产者流程","link":"#生产者流程","children":[]},{"level":3,"title":"消费者流程","slug":"消费者流程","link":"#消费者流程","children":[]},{"level":3,"title":"消费者重新平衡","slug":"消费者重新平衡","link":"#消费者重新平衡","children":[]},{"level":3,"title":"状态存储","slug":"状态存储","link":"#状态存储","children":[]},{"level":3,"title":"元数据存储","slug":"元数据存储","link":"#元数据存储","children":[]},{"level":3,"title":"ZooKeeper","slug":"zookeeper","link":"#zookeeper","children":[]},{"level":3,"title":"复制","slug":"复制","link":"#复制","children":[]},{"level":3,"title":"同步副本","slug":"同步副本","link":"#同步副本","children":[]},{"level":3,"title":"可扩展性","slug":"可扩展性","link":"#可扩展性","children":[]},{"level":3,"title":"生产者","slug":"生产者","link":"#生产者","children":[]},{"level":3,"title":"消费者","slug":"消费者","link":"#消费者","children":[]},{"level":3,"title":"代理","slug":"代理","link":"#代理","children":[]},{"level":3,"title":"分区","slug":"分区","link":"#分区","children":[]},{"level":3,"title":"数据传递语义","slug":"数据传递语义","link":"#数据传递语义","children":[]},{"level":3,"title":"最多一次（At-most once）","slug":"最多一次-at-most-once","link":"#最多一次-at-most-once","children":[]},{"level":3,"title":"至少一次（At-least once）","slug":"至少一次-at-least-once","link":"#至少一次-at-least-once","children":[]},{"level":3,"title":"精确一次（Exactly once）","slug":"精确一次-exactly-once","link":"#精确一次-exactly-once","children":[]},{"level":3,"title":"高级特性","slug":"高级特性","link":"#高级特性","children":[]},{"level":3,"title":"消息过滤","slug":"消息过滤","link":"#消息过滤","children":[]},{"level":3,"title":"延迟消息和定时消息","slug":"延迟消息和定时消息","link":"#延迟消息和定时消息","children":[]}]},{"level":2,"title":"第四步：总结","slug":"第四步-总结","link":"#第四步-总结","children":[]}],"git":{"createdTime":1742565807000,"updatedTime":1742565807000,"contributors":[{"name":"CCCdk","email":"chendongkai@cn.net.ntes","commits":1}]},"readingTime":{"minutes":22.01,"words":6603},"filePathRelative":"system-design/39_distributed_message_queue.md","localizedDate":"2025年3月21日","excerpt":"<h1> 19. 设计分布式消息队列</h1>\\n<p>在本章中，我们将设计一个分布式消息队列。</p>\\n<p>消息队列的优势：</p>\\n<ul>\\n<li><strong>解耦</strong> - 消除组件之间的紧耦合，使它们能够独立更新。</li>\\n<li><strong>提高可扩展性</strong> - 生产者和消费者可以根据流量独立扩展。</li>\\n<li><strong>增加可用性</strong> - 如果系统的一部分出现故障，其他部分仍然可以与队列交互。</li>\\n<li><strong>更好的性能</strong> - 生产者可以在不等待消费者确认的情况下生成消息。</li>\\n</ul>","autoDesc":true}');export{e as data};
